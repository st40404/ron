# turtlebot3
	git clone https://github.com/ROBOTIS-GIT/turtlebot3_msgs.git
	git clone https://github.com/ROBOTIS-GIT/turtlebot3.git
    git clone https://github.com/ROBOTIS-GIT/turtlebot3_simulations.git

# gmapping
    # algorithm
    git clone https://github.com/ros-perception/slam_gmapping.git
    # dependency
    git clone https://github.com/ros-perception/openslam_gmapping

# lidar driver
    git clone https://github.com/ros-drivers/urg_node.git

# realsense 
    # driver
    git clone https://github.com/intel-ros/realsense.git
    # dependency
    git clone https://github.com/pal-robotics/ddynamic_reconfigure.git

# ORBSLAM2
    # Pangolin
    git clone https://github.com/zzx2GH/Pangolin.git
    # ORBSLAM2
    git clone https://github.com/BoomFan/ORB_SLAM2.git


# UKF (now is trying UKF by user informramiz and shazraz)
    # informramiz
    git clone https://github.com/informramiz/Unscented-Kalman-Filter.git
    # shazraz
    git clone https://github.com/shazraz/Unscented-Kalman-Filter.git

# TB3 setting (in docker)
    ############## TB3 ############
    ## USB port permission problem
    ## ( when roslaunch tb3 driver and lidar driver )
    sudo chmod 777 /dev/ttyACM0
    sudo chmod 777 /dev/ttyACM1
    ## Because I doesn't set stable port 
    ## so after give the power
    ## give tb3 USB port signal first, and give lidar power  
     
# Real test of TB3
    ## TB3 driver
    roslaunch turtlebot3_bringup turtlebot3_core.launch
    ## lidar driver
    roslaunch urg_node urg_lidar.launch
    ## SLAM 
    ## (you can choose SLAM method 
    ## in slam_gmapping/gmapping/src/slam_gmapping.cpp)
    ## in laserCallback class, change the value of int mymethod
    roslaunch turtlebot3_slam turtlebot3_slam.launch 
    ## Control TB3 motor
    roslaunch turtlebot3_teleop turtlebot3_teleop_key.launch

    
# setting (in docker)
    ############## ORBSLAM2 ############
    ## install Pangolin
        #### open file CMakeList.txt in Pagolin/src
        #### delete the following code 

        find_package(FFMPEG QUIET)
        if(BUILD_PANGOLIN_VIDEO AND FFMPEG_FOUND)
        set(HAVE_FFMPEG 1)
        list(APPEND INTERNAL_INC  ${FFMPEG_INCLUDE_DIRS} )
        list(APPEND LINK_LIBS ${FFMPEG_LIBRARIES} )
        list(APPEND HEADERS ${INCDIR}/video/drivers/ffmpeg.h)
        list(APPEND SOURCES video/drivers/ffmpeg.cpp)
        message(STATUS "ffmpeg Found and Enabled")
        endif()
        
        #### build Pangolin
        cd Pangolin
        mkdir build
        cd build
        cmake ..
        make
        sudo make install
    
    ## install ORBSLAM2 dependency
        #### usleep(3000) Bug
        #### add following title in ORB_SLAM2/include/System.h
        
        #include <unistd.h> 
        

        #### build base code
        cd ORB_SLAM2
        chmod +x build.sh
        ./build.sh

        #### build Example/ROS/ORB_SLAM2
        chmod +x build_ros.sh
        ./build_ros.sh

        ## if build build_ros.sh have problem,
        ## check ~/.bashrc about export ROS_PATH_PACKAGE is correct,
        ## and source ~/.bashrc
        ## if it still have problem, execute following command

        sudo rosdep fix-permissions
        rosdep update



# everytime when you rebuild your docker env,
# you need to do following command in docker
    ## can't build build.sh problem : without install Pangolin problem
    cd ~/work/src/Pangolin/build
    sudo make install 

    ## can't build build_ros.sh problem
    sudo rosdep fix-permissions
    rosdep update